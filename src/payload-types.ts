/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    customers: CustomerAuthOperations;
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    media: Media;
    categories: Category;
    products: Product;
    'product-variants': ProductVariant;
    customers: Customer;
    orders: Order;
    'shopping-cart': ShoppingCart;
    users: User;
    'payload-preferences': PayloadPreference;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    'product-variants': ProductVariantsSelect<false> | ProductVariantsSelect<true>;
    customers: CustomersSelect<false> | CustomersSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    'shopping-cart': ShoppingCartSelect<false> | ShoppingCartSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user:
    | (Customer & {
        collection: 'customers';
      })
    | (User & {
        collection: 'users';
      });
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface CustomerAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  /**
   * Alternative text for accessibility (optional)
   */
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Storage prefix for S3 (automatically set)
   */
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  /**
   * Category name
   */
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  /**
   * Category description for SEO and display
   */
  description?: string | null;
  /**
   * Parent category (for hierarchical structure)
   */
  parent?: (number | null) | Category;
  /**
   * Category image/icon
   */
  image?: (number | null) | Media;
  /**
   * Category visibility status
   */
  status: 'active' | 'inactive';
  /**
   * Feature this category on homepage
   */
  featured?: boolean | null;
  /**
   * Sort order (lower numbers appear first)
   */
  sortOrder?: number | null;
  /**
   * Auto-generated breadcrumb path (Home > Parent > Current)
   */
  breadcrumbPath?: string | null;
  /**
   * Search Engine Optimization settings
   */
  seo?: {
    /**
     * SEO title (leave empty to use category title)
     */
    title?: string | null;
    /**
     * SEO meta description
     */
    description?: string | null;
    /**
     * SEO keywords (comma separated)
     */
    keywords?: string | null;
  };
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  /**
   * The product name/title
   */
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  /**
   * Short product description for listings
   */
  description: string;
  /**
   * Detailed product description with rich formatting
   */
  fullDescription?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Product images (first image will be the main image)
   */
  images?:
    | {
        image?: (number | null) | Media;
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Base price in USD
   */
  price: number;
  /**
   * Original price (for showing discounts)
   */
  compareAtPrice?: number | null;
  /**
   * Stock Keeping Unit - unique product identifier
   */
  sku: string;
  inventory?: {
    /**
     * Track inventory quantity for this product
     */
    trackQuantity?: boolean | null;
    /**
     * Current stock quantity
     */
    quantity?: number | null;
    /**
     * Allow orders when out of stock
     */
    allowBackorder?: boolean | null;
    /**
     * Alert when stock falls below this number
     */
    lowStockThreshold?: number | null;
  };
  /**
   * Product categories for organization and filtering
   */
  categories?: (number | Category)[] | null;
  /**
   * Tags for better searchability and filtering
   */
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Product visibility status
   */
  status: 'draft' | 'active' | 'archived';
  /**
   * Feature this product on homepage and category pages
   */
  featured?: boolean | null;
  /**
   * Product weight in kg (for shipping calculations)
   */
  weight?: number | null;
  /**
   * Product dimensions for shipping calculations
   */
  dimensions?: {
    /**
     * Length in cm
     */
    length?: number | null;
    /**
     * Width in cm
     */
    width?: number | null;
    /**
     * Height in cm
     */
    height?: number | null;
  };
  /**
   * Search Engine Optimization settings
   */
  seo?: {
    /**
     * SEO title (leave empty to use product title)
     */
    title?: string | null;
    /**
     * SEO meta description
     */
    description?: string | null;
    /**
     * SEO keywords (comma separated)
     */
    keywords?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-variants".
 */
export interface ProductVariant {
  id: number;
  /**
   * Variant name (e.g., "Large Red", "Size M - Blue")
   */
  title: string;
  /**
   * Parent product this variant belongs to
   */
  product: number | Product;
  /**
   * Unique SKU for this variant
   */
  sku: string;
  /**
   * Variant price (leave empty to use product base price)
   */
  price?: number | null;
  /**
   * Original price for this variant
   */
  compareAtPrice?: number | null;
  /**
   * Variant options (size, color, material, etc.)
   */
  options: {
    /**
     * Option name (e.g., "Size", "Color", "Material")
     */
    name: string;
    /**
     * Option value (e.g., "Large", "Red", "Cotton")
     */
    value: string;
    id?: string | null;
  }[];
  inventory?: {
    /**
     * Stock quantity for this variant
     */
    quantity?: number | null;
    /**
     * Reserved quantity (in pending orders)
     */
    reserved?: number | null;
    /**
     * Available quantity (calculated: quantity - reserved)
     */
    available?: number | null;
  };
  /**
   * Variant-specific images (optional - will fallback to product images)
   */
  images?:
    | {
        image: number | Media;
        alt: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Variant weight in kg (leave empty to use product weight)
   */
  weight?: number | null;
  /**
   * Is this the default variant for the product?
   */
  isDefault?: boolean | null;
  /**
   * Variant availability status
   */
  status: 'active' | 'inactive';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers".
 */
export interface Customer {
  id: number;
  /**
   * Customer first name
   */
  firstName: string;
  /**
   * Customer last name
   */
  lastName: string;
  /**
   * Customer phone number
   */
  phone?: string | null;
  /**
   * Customer date of birth
   */
  dateOfBirth?: string | null;
  /**
   * Customer addresses (shipping and billing)
   */
  addresses?:
    | {
        type: 'shipping' | 'billing';
        /**
         * Is this the default address for this type?
         */
        isDefault?: boolean | null;
        firstName: string;
        lastName: string;
        /**
         * Company name (optional)
         */
        company?: string | null;
        /**
         * Street address line 1
         */
        address1: string;
        /**
         * Street address line 2 (optional)
         */
        address2?: string | null;
        city: string;
        /**
         * State/Province
         */
        state?: string | null;
        postalCode: string;
        country: 'NG' | 'KE' | 'ZA' | 'GH' | 'UG' | 'TZ' | 'ET' | 'MA' | 'EG' | 'DZ' | 'OTHER';
        id?: string | null;
      }[]
    | null;
  /**
   * Customer preferences and settings
   */
  preferences?: {
    currency?: ('USD' | 'NGN' | 'KES' | 'ZAR' | 'GHS' | 'UGX') | null;
    language?: ('en' | 'fr' | 'ar' | 'sw') | null;
    /**
     * Subscribe to newsletter
     */
    newsletter?: boolean | null;
    /**
     * Receive SMS marketing messages
     */
    smsMarketing?: boolean | null;
  };
  /**
   * Customer account status
   */
  status: 'active' | 'inactive' | 'suspended';
  /**
   * Customer group for pricing and promotions
   */
  customerGroup?: ('regular' | 'vip' | 'wholesale') | null;
  /**
   * Total amount spent by customer
   */
  totalSpent?: number | null;
  /**
   * Total number of orders placed
   */
  totalOrders?: number | null;
  /**
   * Date of last order
   */
  lastOrderDate?: string | null;
  /**
   * Internal notes about the customer (admin only)
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
  /**
   * Customer email address (used for login)
   */
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  /**
   * Unique order number
   */
  orderNumber: string;
  /**
   * Customer who placed the order
   */
  customer: number | Customer;
  /**
   * Items in this order
   */
  items: {
    product: number | Product;
    /**
     * Product variant (if applicable)
     */
    variant?: (number | null) | ProductVariant;
    quantity: number;
    /**
     * Price per unit at time of order
     */
    unitPrice: number;
    /**
     * Total price for this item (quantity × unitPrice)
     */
    totalPrice: number;
    /**
     * Product details at time of order (for record keeping)
     */
    productSnapshot: {
      title: string;
      sku: string;
      /**
       * Product image URL at time of order
       */
      image?: string | null;
    };
    id?: string | null;
  }[];
  /**
   * Subtotal before taxes and shipping
   */
  subtotal: number;
  shipping: {
    method: 'standard' | 'express' | 'overnight' | 'pickup';
    cost: number;
    address: {
      firstName: string;
      lastName: string;
      company?: string | null;
      address1: string;
      address2?: string | null;
      city: string;
      state?: string | null;
      postalCode: string;
      country: string;
      phone?: string | null;
    };
    /**
     * Shipping tracking number
     */
    trackingNumber?: string | null;
    /**
     * Estimated delivery date
     */
    estimatedDelivery?: string | null;
  };
  billing: {
    address: {
      firstName: string;
      lastName: string;
      company?: string | null;
      address1: string;
      address2?: string | null;
      city: string;
      state?: string | null;
      postalCode: string;
      country: string;
    };
  };
  tax?: {
    amount?: number | null;
    /**
     * Tax rate (e.g., 0.15 for 15%)
     */
    rate?: number | null;
    /**
     * Is tax included in product prices?
     */
    inclusive?: boolean | null;
  };
  /**
   * Total order amount (subtotal + shipping + tax)
   */
  total: number;
  currency: 'USD' | 'NGN' | 'KES' | 'ZAR' | 'GHS' | 'UGX';
  /**
   * Order status
   */
  status: 'pending' | 'confirmed' | 'processing' | 'shipped' | 'delivered' | 'cancelled' | 'refunded';
  /**
   * Payment status
   */
  paymentStatus: 'pending' | 'paid' | 'failed' | 'refunded' | 'partially_refunded';
  /**
   * Payment method used
   */
  paymentMethod?:
    | ('credit_card' | 'paypal' | 'mpesa' | 'mtn_mobile_money' | 'airtel_money' | 'bank_transfer' | 'cod')
    | null;
  /**
   * Payment gateway reference/transaction ID
   */
  paymentReference?: string | null;
  /**
   * Stripe PaymentIntent ID for this order
   */
  stripePaymentIntentId?: string | null;
  /**
   * Stripe client secret (for frontend confirmation)
   */
  stripeClientSecret?: string | null;
  /**
   * Order notes (customer or admin)
   */
  notes?: string | null;
  /**
   * Internal notes (admin only)
   */
  internalNotes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shopping-cart".
 */
export interface ShoppingCart {
  id: number;
  /**
   * Customer (if logged in)
   */
  customer?: (number | null) | Customer;
  /**
   * Session ID for guest users
   */
  sessionId?: string | null;
  /**
   * Items in the cart
   */
  items?:
    | {
        product: number | Product;
        /**
         * Product variant (if applicable)
         */
        variant?: (number | null) | ProductVariant;
        quantity: number;
        /**
         * Current price per unit
         */
        unitPrice: number;
        /**
         * Total price for this item
         */
        totalPrice: number;
        /**
         * When item was added to cart
         */
        addedAt?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Cart subtotal
   */
  subtotal?: number | null;
  /**
   * Total number of items in cart
   */
  itemCount?: number | null;
  currency: 'USD' | 'NGN' | 'KES' | 'ZAR' | 'GHS' | 'UGX';
  /**
   * Cart status
   */
  status: 'active' | 'abandoned' | 'converted';
  /**
   * When this cart expires (for cleanup)
   */
  expiresAt?: string | null;
  /**
   * Customer notes or special instructions
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  /**
   * Admin user full name
   */
  name: string;
  /**
   * User role and permissions level
   */
  role?: ('super_admin' | 'admin' | 'editor') | null;
  updatedAt: string;
  createdAt: string;
  /**
   * Admin user email address (used for login)
   */
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user:
    | {
        relationTo: 'customers';
        value: number | Customer;
      }
    | {
        relationTo: 'users';
        value: number | User;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'products';
          value: number | Product;
        } | null)
      | ({
          relationTo: 'categories';
          value: number | Category;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'products';
    value: number | Product;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        categoryID?: string | null;
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'product-variants';
        value: number | ProductVariant;
      } | null)
    | ({
        relationTo: 'customers';
        value: number | Customer;
      } | null)
    | ({
        relationTo: 'orders';
        value: number | Order;
      } | null)
    | ({
        relationTo: 'shopping-cart';
        value: number | ShoppingCart;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'payload-preferences';
        value: number | PayloadPreference;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null);
  globalSlug?: string | null;
  user:
    | {
        relationTo: 'customers';
        value: number | Customer;
      }
    | {
        relationTo: 'users';
        value: number | User;
      };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  description?: T;
  parent?: T;
  image?: T;
  status?: T;
  featured?: T;
  sortOrder?: T;
  breadcrumbPath?: T;
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
      };
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  description?: T;
  fullDescription?: T;
  images?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  price?: T;
  compareAtPrice?: T;
  sku?: T;
  inventory?:
    | T
    | {
        trackQuantity?: T;
        quantity?: T;
        allowBackorder?: T;
        lowStockThreshold?: T;
      };
  categories?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  status?: T;
  featured?: T;
  weight?: T;
  dimensions?:
    | T
    | {
        length?: T;
        width?: T;
        height?: T;
      };
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-variants_select".
 */
export interface ProductVariantsSelect<T extends boolean = true> {
  title?: T;
  product?: T;
  sku?: T;
  price?: T;
  compareAtPrice?: T;
  options?:
    | T
    | {
        name?: T;
        value?: T;
        id?: T;
      };
  inventory?:
    | T
    | {
        quantity?: T;
        reserved?: T;
        available?: T;
      };
  images?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  weight?: T;
  isDefault?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers_select".
 */
export interface CustomersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  phone?: T;
  dateOfBirth?: T;
  addresses?:
    | T
    | {
        type?: T;
        isDefault?: T;
        firstName?: T;
        lastName?: T;
        company?: T;
        address1?: T;
        address2?: T;
        city?: T;
        state?: T;
        postalCode?: T;
        country?: T;
        id?: T;
      };
  preferences?:
    | T
    | {
        currency?: T;
        language?: T;
        newsletter?: T;
        smsMarketing?: T;
      };
  status?: T;
  customerGroup?: T;
  totalSpent?: T;
  totalOrders?: T;
  lastOrderDate?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  _verified?: T;
  _verificationToken?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  orderNumber?: T;
  customer?: T;
  items?:
    | T
    | {
        product?: T;
        variant?: T;
        quantity?: T;
        unitPrice?: T;
        totalPrice?: T;
        productSnapshot?:
          | T
          | {
              title?: T;
              sku?: T;
              image?: T;
            };
        id?: T;
      };
  subtotal?: T;
  shipping?:
    | T
    | {
        method?: T;
        cost?: T;
        address?:
          | T
          | {
              firstName?: T;
              lastName?: T;
              company?: T;
              address1?: T;
              address2?: T;
              city?: T;
              state?: T;
              postalCode?: T;
              country?: T;
              phone?: T;
            };
        trackingNumber?: T;
        estimatedDelivery?: T;
      };
  billing?:
    | T
    | {
        address?:
          | T
          | {
              firstName?: T;
              lastName?: T;
              company?: T;
              address1?: T;
              address2?: T;
              city?: T;
              state?: T;
              postalCode?: T;
              country?: T;
            };
      };
  tax?:
    | T
    | {
        amount?: T;
        rate?: T;
        inclusive?: T;
      };
  total?: T;
  currency?: T;
  status?: T;
  paymentStatus?: T;
  paymentMethod?: T;
  paymentReference?: T;
  stripePaymentIntentId?: T;
  stripeClientSecret?: T;
  notes?: T;
  internalNotes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shopping-cart_select".
 */
export interface ShoppingCartSelect<T extends boolean = true> {
  customer?: T;
  sessionId?: T;
  items?:
    | T
    | {
        product?: T;
        variant?: T;
        quantity?: T;
        unitPrice?: T;
        totalPrice?: T;
        addedAt?: T;
        id?: T;
      };
  subtotal?: T;
  itemCount?: T;
  currency?: T;
  status?: T;
  expiresAt?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        categoryID?: T;
        title?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'products';
                value: number | Product;
              } | null)
            | ({
                relationTo: 'categories';
                value: number | Category;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'products';
                value: number | Product;
              } | null)
            | ({
                relationTo: 'categories';
                value: number | Category;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}